"use strict";(self["webpackChunkhades_space"]=self["webpackChunkhades_space"]||[]).push([[934],{52578:(t,e,a)=>{a.d(e,{Z:()=>v});var s=a(66252),i=a(3577),n=a(49963);const r=t=>((0,s.dD)("data-v-3eae0739"),t=t(),(0,s.Cn)(),t),c={class:"container"},o={class:"title"},d=r((()=>(0,s._)("div",null,null,-1))),l=[d],u=["href"];function f(t,e,a,r,d,f){const h=(0,s.up)("v-data"),g=(0,s.Q2)("t");return(0,s.wg)(),(0,s.iD)("div",c,[Object.keys(a.args.data).length>1?((0,s.wg)(),(0,s.iD)(s.HY,{key:0},[(0,s._)("div",o,[(0,s._)("h2",null,(0,i.zw)(t.$t("CONTENT")),1),(0,s._)("div",{class:(0,i.C_)(["hamburger-icon",{opened:d.contentOpened}]),onClick:e[0]||(e[0]=t=>d.contentOpened=!d.contentOpened)},l,2)]),d.contentOpened?((0,s.wg)(),(0,s.j4)(n.W3,{key:0,tag:"ol",class:"list"},{default:(0,s.w5)((()=>[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(a.args.data,(({Name:t,TID:e})=>((0,s.wg)(),(0,s.iD)("li",{key:t},[(0,s.wy)((0,s._)("a",{href:`#${t}`},null,8,u),[[g,e]])])))),128))])),_:1})):(0,s.kq)("",!0)],64)):(0,s.kq)("",!0),((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(a.args.data,((t,e)=>((0,s.wg)(),(0,s.j4)(h,{key:e,data:t,"table-opts":a.args.tableOpts,"icon-dir":a.args.iconDir},null,8,["data","table-opts","icon-dir"])))),128))])}var h=a(42669);const g={components:{VData:h.Z},props:{args:{type:Object,required:!0}},data(){return{contentOpened:!1}}};var p=a(83744);const m=(0,p.Z)(g,[["render",f],["__scopeId","data-v-3eae0739"]]),v=m},6790:(t,e,a)=>{a.d(e,{Z:()=>g});var s=a(66252),i=a(3577);const n={class:"portrait-container"},r=["src","alt"],c={class:"topic"};function o(t,e,a,o,d,l){const u=(0,s.up)("Head"),f=(0,s.up)("v-content");return(0,s.wg)(),(0,s.iD)("div",null,[(0,s.Wm)(u,null,{default:(0,s.w5)((()=>[(0,s._)("title",null,(0,i.zw)(l.title),1)])),_:1}),(0,s._)("div",n,[a.portrait?((0,s.wg)(),(0,s.iD)("img",{key:0,class:"portrait",src:a.portrait.src,alt:a.portrait.alt},null,8,r)):(0,s.kq)("",!0),(0,s._)("h1",c,(0,i.zw)(l.title),1)]),(0,s.WI)(t.$slots,"default",{},void 0,!0),(0,s.Wm)(f,{args:a.contentArgs},null,8,["args"])])}var d=a(21232),l=a(52578);const u={components:{Head:d.Fb,VContent:l.Z},props:{contentArgs:{type:Object,required:!0},titleLocKey:{type:String,required:!0},portrait:{type:Object,default:null,validator:t=>["src","alt"].every((e=>e in t))}},computed:{title(){return this.$t(this.titleLocKey)}}};var f=a(83744);const h=(0,f.Z)(u,[["render",o],["__scopeId","data-v-166aea6b"]]),g=h},70174:(t,e,a)=>{a.r(e),a.d(e,{default:()=>h});var s=a(66252);function i(t,e,a,i,n,r){const c=(0,s.up)("Page");return(0,s.wg)(),(0,s.j4)(c,{"title-loc-key":"TID_DARK_RED_STAR_LABEL","content-args":{data:n.data,iconDir:"game/Stars",tableOpts:{colLvlStartAt:5}},portrait:{src:n.img,alt:"Asteroids"}},null,8,["content-args","portrait"])}var n=a(6790),r=a(96535),c=a(92022);const{DarkRedStar:o}=r.Z,d=["GhostSpawnSecs","Models","LowerPlanetsMinLevel","MaxPlanetBomberCoverage","MaxPlanetBomberCoverage","GhostSpawner","NumLowerPlanets","MedRiskMining","HighRiskMining"];d.forEach((t=>delete o[t]));const l={components:{Page:n.Z},data(){return{data:{DarkRedStar:(0,c.Z)(o,{map:([t,e])=>[t,Array.isArray(e)?e.slice(5):e]})},img:a(8413)}}};var u=a(83744);const f=(0,u.Z)(l,[["render",i]]),h=f},90402:(t,e,a)=>{a.r(e),a.d(e,{default:()=>x});var s=a(66252),i=a(49963),n=a(3577);const r=t=>((0,s.dD)("data-v-a40d9d5c"),t=t(),(0,s.Cn)(),t),c={class:"container"},o=r((()=>(0,s._)("title",null,"Nerflog",-1))),d=(0,s.uE)('<h1 class="title" data-v-a40d9d5c> Nerflog </h1><div class="banner" data-v-a40d9d5c><div class="wrap" data-v-a40d9d5c><div class="message" data-v-a40d9d5c><div class="icon-bg" data-v-a40d9d5c><div class="icon" data-v-a40d9d5c></div></div><div class="body" data-v-a40d9d5c><p data-v-a40d9d5c>Work in progress. Only Modules file partially supported</p></div></div></div></div>',2),l=["onClick"],u={class:"title"},f={class:"note"},h={key:0},g={class:"loader"},p={key:0,class:"icon"},m={key:1,class:"text"},v={key:0,class:"content"},w={class:"file"},y={class:"status"};function b(t,e,a,r,b,D){const _=(0,s.up)("Head"),k=(0,s.up)("v-data");return(0,s.wg)(),(0,s.iD)("div",c,[(0,s.Wm)(_,null,{default:(0,s.w5)((()=>[o])),_:1}),d,(0,s.Wm)(i.W3,{tag:"ol",class:"list"},{default:(0,s.w5)((()=>[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(t.patchCommits,(({title:e,note:a},i)=>((0,s.wg)(),(0,s.iD)("li",{key:e,class:"category"},[(0,s._)("div",{class:"head",onClick:e=>t.onclickCategory(i)},[(0,s._)("div",{class:(0,n.C_)(["icon",{rotate:t.indexOpened==i}])},null,2),(0,s._)("div",null,[(0,s._)("div",u,(0,n.zw)(e),1),(0,s._)("div",f,(0,n.zw)(a),1)])],8,l),t.indexOpened==i?((0,s.wg)(),(0,s.iD)("div",h,[(0,s._)("div",g,["loading"==t.patchCommits[i]?.status?((0,s.wg)(),(0,s.iD)("div",p)):(0,s.kq)("",!0),"ready"!=t.patchCommits[i]?.status?((0,s.wg)(),(0,s.iD)("p",m,(0,n.zw)(t.loadingMessage),1)):(0,s.kq)("",!0)]),"ready"==t.patchCommits[i]?.status?((0,s.wg)(),(0,s.iD)("div",v,[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(t.patchCommits[i].files,((e,a)=>((0,s.wg)(),(0,s.iD)("div",{key:a},[(0,s._)("h2",w,"File: "+(0,n.zw)(a),1),(0,s._)("h3",y,"status: "+(0,n.zw)(e.status),1),((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(e.data,(i=>((0,s.wg)(),(0,s.iD)("div",null,["modified"==e.status?((0,s.wg)(),(0,s.j4)(k,{key:0,data:i,sort:!1,"icon-dir":t.iconDirByFile[a]},null,8,["data","icon-dir"])):(0,s.kq)("",!0)])))),256))])))),128))])):(0,s.kq)("",!0)])):(0,s.kq)("",!0)])))),128))])),_:1})])}var D=a(21232);const _=[{hashes:["6830102801cbcea667e6cbb8907574a817a613ce","6b471418f3b60c18647ab3e4d87d376fcacd9563","79d0e80e53676249ac4070d9113846008e644dd8"],title:"Patch №2",note:"Some nerf"},{hashes:["68f1280392e3b5bf1b81331b3581e2bee0fffd16","5bee8d926a1dacee6c428070047d26e2ae89f181"],title:"Patch №1",note:"EA Stage 2: White Stars"},{hashes:["d03ed51e4187a1b5ec1294189166e422d24c72d4"],title:"Patch №0",note:"EA Stage 1"}];var k=a(42669);const C="https://api.github.com/repos/userXinos/HadesSpace/",O=new Headers;function M(){return{fetchUrl:a,fetchParentByName:t,fetchCommit:e,fetchFile:s};async function t(t,e){const i=new URL("commits",C);i.searchParams.set("path",t);const n=await a(i.href),r=n.findIndex((t=>t.sha==e)),c=await a(n[r+1].url),o=c.files.find((e=>e.filename==t)).contents_url;return s(o)}function e(t){const e=new URL(`commits/${t}`,C);return a(e.href)}function a(t){return fetch(t,{method:"GET",headers:O}).then((t=>{if(!t.ok)throw new Error(t.statusText);return t.json()}))}async function s(t){const{content:e}=await a(t),s=await import(`data:text/javascript;base64,${e}`);return s.default}}var j=a(44265);function A(){return{mergeDeep:t,createDiff:e,isObject:s,addMetadata:a};function t(e,...a){if(!a.length)return e;const i=a.shift();if(s(e)&&s(i))for(const n in i)s(i[n])?(e[n]?e[n]=Object.assign({},e[n]):Object.assign(e,{[n]:{}}),t(e[n],i[n])):Object.assign(e,{[n]:i[n]});return t(e,...a)}function e(t,e){return s(t)?a(t,e):null;function a(t,e){const n={};for(const r in t)if(r in t&&r in e){const c=t[r],o=e[r];if(s(c)){const t=a(c,o);t&&(n[r]=t);continue}(Array.isArray(c)?i(c,o):c===o)||(n[r]=c,Array.isArray(c)&&(n[`__>>${r}`]=Array.from({length:c.length},(()=>">>"))),n[`_${r}`]=o)}return Object.keys(n).length?n:null}}function a(t,e,i){for(const n of Object.keys(t)){const r=t,c=e;if(s(r[n])){const t=r[n];a(t,c[n]),t.Name||(t.Name=i),t.TID||(t.TID=i)}c&&j.Z.meta.filter((t=>t in c)).forEach((t=>r[t]=c[t]))}return t}function s(t){return"object"==typeof t&&!Array.isArray(t)}function i(t,e){return t.every(((t,a)=>t===e[a]))}}const S={capital_ships:"game/Ships",modules:"game/Modules",stars:"game/Stars",spacebuildings:"game/SpaceBuildings",distinctions:"game/Distinctions"},P=(0,s.aZ)({name:"GamePatch",components:{Head:D.Fb,VData:k.Z},setup(){const{fetchUrl:t,fetchParentByName:e,fetchCommit:a,fetchFile:s}=M(),{createDiff:i,addMetadata:n,mergeDeep:r}=A();return{fetchUrl:t,fetchFile:s,fetchParentByName:e,fetchCommit:a,mergeDeepObject:r,createDiff:i,addMetadata:n}},data(){return{iconDirByFile:S,patchCommits:_,indexOpened:-1,loadingMessage:""}},methods:{onclickCategory(t){this.indexOpened!=t?(this.indexOpened=t,this.patchCommits[t].status||"loading"==this.patchCommits[t].status||(this.patchCommits[t].status="loading",this.loadDiff(t).then((()=>{this.patchCommits[t].status="ready"})).catch((e=>{this.patchCommits[t].status="error",this.loadingMessage=`Error: ${e.message}`,console.error(e)})))):this.indexOpened=-1},async loadDiff(t){this.loadingMessage="getting commits...";const e=this.patchCommits[t],a=await Promise.all(e.hashes.map(this.fetchCommit));this.loadingMessage="";for(const s of a)for(const{contents_url:t,filename:a,status:i}of s.files)if(a.startsWith("parser/dist/")&&a.includes("modules")){e.files||(e.files={});const n=a.substring(a.lastIndexOf("/")+1).replace(/\.\w+$/,""),r=e.files?.[n]||{data:null};this.loadingMessage=`download file: ${n} (${s.sha.slice(0,7)})...`;const c=await this.fetchFile(t);this.loadingMessage="",e.files[n]={...r,status:i,data:this.mergeDeepObject(c,r.data||{})},"modified"!=i||"parent"in r||(this.loadingMessage=`download parent: ${n} (${s.sha.slice(0,7)})...`,e.files[n].parent=await this.fetchParentByName(a,s.sha),this.loadingMessage="")}for(const s in e.files)if(s in e.files&&"parent"in e.files[s]){this.loadingMessage=`create diff: ${s}...`;const t=this.createDiff(e.files[s].parent,e.files[s].data);null!=t&&(e.files[s]={...e.files[s],data:this.addMetadata(t,e.files[s].parent,s)}),this.loadingMessage=""}}}});var $=a(83744);const Z=(0,$.Z)(P,[["render",b],["__scopeId","data-v-a40d9d5c"]]),x=Z}}]);